COQC Test_bv_cvc5.v
Type-checking LFSC proof... Done [0.003 s]
Converting LFSC proof to SMTCoq...1:input  ((not (=> (bvult op_0 op_1) (=> (bvult op_1 op_2) (bvult op_0 op_2)))) )
Warning: hole for trust_f.
2:(implies_neg1 ((=> (bvult op_0 op_1) (=> (bvult op_1 op_2) (bvult op_0 op_2))) (bvult op_0 op_1) ) )
3:(weaken ((bvult op_0 op_1) )  2)
4:(implies_neg2 ((=> (bvult op_0 op_1) (=> (bvult op_1 op_2) (bvult op_0 op_2))) (not (=> (bvult op_1 op_2) (bvult op_0 op_2))) ) )
5:(implies_neg1 ((=> (bvult op_1 op_2) (bvult op_0 op_2)) (bvult op_1 op_2) ) )
6:(resolution ()  5 4)
7:(weaken ((bvult op_1 op_2) )  6)
8:(implies_neg2 ((=> (bvult op_1 op_2) (bvult op_0 op_2)) (not (bvult op_0 op_2)) ) )
9:(resolution ()  8 4)
10:(weaken ((not (bvult op_0 op_2)) )  9)
11:(bbvar ((bbT op_0 [(bitof 0 op_0); (bitof 1 op_0); (bitof 2 op_0); (bitof 3 op_0)]) ) )
12:(bbvar ((bbT op_1 [(bitof 0 op_1); (bitof 1 op_1); (bitof 2 op_1); (bitof 3 op_1)]) ) )
13:(bbvar ((bbT op_2 [(bitof 0 op_2); (bitof 1 op_2); (bitof 2 op_2); (bitof 3 op_2)]) ) )
14:(bbult ((= (bvult op_0 op_2) (or (and (= (bitof 3 op_0) (bitof 3 op_2)) (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)))) (and (not (bitof 3 op_0)) (bitof 3 op_2)))) )  11 13)
15:(bbult ((= (bvult op_1 op_2) (or (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)))) )  12 13)
16:(bbult ((= (bvult op_0 op_1) (or (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)))) )  11 12)
17:(equiv1 ((not (bvult op_0 op_1)) (or (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1))) )  16)
18:(equiv_neg1 ((= (bitof 3 op_0) (bitof 3 op_2)) (not (bitof 3 op_0)) (not (bitof 3 op_2)) ) )
19:(weaken ((not (bitof 3 op_2)) (not (bitof 3 op_0)) (= (bitof 3 op_0) (bitof 3 op_2)) )  18)
20:(and_neg ((and (= (bitof 3 op_0) (bitof 3 op_2)) (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)))) (not (= (bitof 3 op_0) (bitof 3 op_2))) (not (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)))) ) )
21:(and_pos ((not (and (not (bitof 3 op_1)) (bitof 3 op_2))) (bitof 3 op_2) )  1)
22:(weaken ((bitof 3 op_2) (not (and (not (bitof 3 op_1)) (bitof 3 op_2))) )  21)
23:(equiv_pos2 ((not (= (bitof 3 op_1) (bitof 3 op_2))) (not (bitof 3 op_1)) (bitof 3 op_2) ) )
24:(weaken ((not (bitof 3 op_1)) (not (= (bitof 3 op_1) (bitof 3 op_2))) (bitof 3 op_2) )  23)
25:(and_pos ((not (and (not (bitof 3 op_0)) (bitof 3 op_1))) (bitof 3 op_1) )  1)
26:(weaken ((bitof 3 op_1) (not (and (not (bitof 3 op_0)) (bitof 3 op_1))) )  25)
27:(equiv_pos1 ((not (= (bitof 3 op_0) (bitof 3 op_2))) (bitof 3 op_0) (not (bitof 3 op_2)) ) )
28:(weaken ((not (= (bitof 3 op_0) (bitof 3 op_2))) (not (bitof 3 op_2)) (bitof 3 op_0) )  27)
29:(or_pos ((not (or (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)))) (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)) ) )
30:(weaken ((not (or (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)) (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) )  29)
31:(and_pos ((not (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1))))) (= (bitof 3 op_0) (bitof 3 op_1)) )  0)
32:(and_pos ((not (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1))))) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1))) )  1)
33:(and_pos ((not (and (not (bitof 3 op_1)) (bitof 3 op_2))) (not (bitof 3 op_1)) )  0)
34:(weaken ((not (bitof 3 op_1)) (not (and (not (bitof 3 op_1)) (bitof 3 op_2))) )  33)
35:(or_pos ((not (or (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)))) (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)) ) )
36:(weaken ((not (or (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)) (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) )  35)
37:(and_pos ((not (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1))))) (= (bitof 2 op_0) (bitof 2 op_1)) )  0)
38:(and_pos ((not (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1))))) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1))) )  1)
39:(or_neg ((or (and (= (bitof 3 op_0) (bitof 3 op_2)) (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)))) (and (not (bitof 3 op_0)) (bitof 3 op_2))) (not (and (not (bitof 3 op_0)) (bitof 3 op_2))) )  1)
40:(and_pos ((not (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2))))) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2))) )  1)
41:(or_pos ((not (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)) ) )
42:(weaken ((not (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 1 op_0)) (bitof 1 op_1)) (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) )  41)
43:(equiv_pos2 ((not (= (bitof 1 op_1) (bitof 1 op_2))) (not (bitof 1 op_1)) (bitof 1 op_2) ) )
44:(weaken ((bitof 1 op_2) (not (= (bitof 1 op_1) (bitof 1 op_2))) (not (bitof 1 op_1)) )  43)
45:(or_neg ((or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2))) (not (and (not (bitof 1 op_0)) (bitof 1 op_2))) )  1)
46:(and_pos ((not (and (not (bitof 1 op_1)) (bitof 1 op_2))) (not (bitof 1 op_1)) )  0)
47:(weaken ((not (bitof 1 op_1)) (not (and (not (bitof 1 op_1)) (bitof 1 op_2))) )  46)
48:(equiv1 ((not (bvult op_1 op_2)) (or (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2))) )  15)
49:(and_pos ((not (and (not (bitof 2 op_0)) (bitof 2 op_1))) (not (bitof 2 op_0)) )  0)
50:(and_pos ((not (and (not (bitof 0 op_1)) (bitof 0 op_2))) (not (bitof 0 op_1)) )  0)
51:(and_neg ((and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (not (= (bitof 2 op_0) (bitof 2 op_2))) (not (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) ) )
52:(and_pos ((not (and (not (bitof 2 op_0)) (bitof 2 op_1))) (bitof 2 op_1) )  1)
53:(equiv2 ((bvult op_0 op_2) (not (or (and (= (bitof 3 op_0) (bitof 3 op_2)) (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)))) (and (not (bitof 3 op_0)) (bitof 3 op_2)))) )  14)
54:(and_pos ((not (and (not (bitof 2 op_1)) (bitof 2 op_2))) (bitof 2 op_2) )  1)
55:(and_pos ((not (and (not (bitof 0 op_0)) (bitof 0 op_1))) (bitof 0 op_1) )  1)
56:(weaken ((bitof 0 op_1) (not (and (not (bitof 0 op_0)) (bitof 0 op_1))) )  55)
57:(and_pos ((not (and (not (bitof 2 op_1)) (bitof 2 op_2))) (not (bitof 2 op_1)) )  0)
58:(weaken ((not (bitof 2 op_1)) (not (and (not (bitof 2 op_1)) (bitof 2 op_2))) )  57)
59:(and_neg ((and (not (bitof 2 op_0)) (bitof 2 op_2)) (bitof 2 op_0) (not (bitof 2 op_2)) ) )
60:(or_neg ((or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2))) (not (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2))))) )  0)
61:(equiv_pos2 ((not (= (bitof 3 op_0) (bitof 3 op_1))) (not (bitof 3 op_0)) (bitof 3 op_1) ) )
62:(weaken ((not (bitof 3 op_0)) (not (= (bitof 3 op_0) (bitof 3 op_1))) (bitof 3 op_1) )  61)
63:(and_pos ((not (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2)))) (= (bitof 1 op_1) (bitof 1 op_2)) )  0)
64:(equiv_neg2 ((= (bitof 3 op_0) (bitof 3 op_2)) (bitof 3 op_0) (bitof 3 op_2) ) )
65:(weaken ((bitof 3 op_2) (bitof 3 op_0) (= (bitof 3 op_0) (bitof 3 op_2)) )  64)
66:(or_pos ((not (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)) ) )
67:(equiv_pos2 ((not (= (bitof 2 op_1) (bitof 2 op_2))) (not (bitof 2 op_1)) (bitof 2 op_2) ) )
68:(weaken ((not (bitof 2 op_1)) (bitof 2 op_2) (not (= (bitof 2 op_1) (bitof 2 op_2))) )  67)
69:(and_pos ((not (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2))))) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2))) )  1)
70:(and_pos ((not (and (not (bitof 1 op_0)) (bitof 1 op_1))) (bitof 1 op_1) )  1)
71:(weaken ((bitof 1 op_1) (not (and (not (bitof 1 op_0)) (bitof 1 op_1))) )  70)
72:(or_pos ((not (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)) ) )
73:(weaken ((not (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)) (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) )  72)
74:(and_pos ((not (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2))))) (= (bitof 3 op_1) (bitof 3 op_2)) )  0)
75:(and_pos ((not (and (not (bitof 1 op_0)) (bitof 1 op_1))) (not (bitof 1 op_0)) )  0)
76:(weaken ((not (bitof 1 op_0)) (not (and (not (bitof 1 op_0)) (bitof 1 op_1))) )  75)
77:(and_pos ((not (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1)))) (and (not (bitof 0 op_0)) (bitof 0 op_1)) )  1)
78:(weaken ((and (not (bitof 0 op_0)) (bitof 0 op_1)) (not (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1)))) )  77)
79:(or_neg ((or (and (= (bitof 3 op_0) (bitof 3 op_2)) (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)))) (and (not (bitof 3 op_0)) (bitof 3 op_2))) (not (and (= (bitof 3 op_0) (bitof 3 op_2)) (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2))))) )  0)
80:(and_pos ((not (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2)
)) (and (not (bitof 1 op_1)) (bitof 1 op_2))))) (= (bitof 2 op_1) (bitof 2 op_2)) )  0)
81:(weaken ((= (bitof 2 op_1) (bitof 2 op_2)) (not (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2))))) )  80)
82:(or_neg ((or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2))) (not (and (not (bitof 2 op_0)) (bitof 2 op_2))) )  1)
83:(and_pos ((not (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2)))) (and (not (bitof 0 op_1)) (bitof 0 op_2)) )  1)
84:(equiv_pos2 ((not (= (bitof 2 op_0) (bitof 2 op_1))) (not (bitof 2 op_0)) (bitof 2 op_1) ) )
85:(weaken ((not (= (bitof 2 op_0) (bitof 2 op_1))) (bitof 2 op_1) (not (bitof 2 op_0)) )  84)
86:(and_pos ((not (and (not (bitof 1 op_1)) (bitof 1 op_2))) (bitof 1 op_2) )  1)
87:(weaken ((bitof 1 op_2) (not (and (not (bitof 1 op_1)) (bitof 1 op_2))) )  86)
88:(and_neg ((and (not (bitof 1 op_0)) (bitof 1 op_2)) (bitof 1 op_0) (not (bitof 1 op_2)) ) )
89:(and_neg ((and (not (bitof 3 op_0)) (bitof 3 op_2)) (bitof 3 op_0) (not (bitof 3 op_2)) ) )
90:(or_pos ((not (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) 
(bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)) ) )
91:(weaken ((not (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (a
nd (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 1 op_1)) (bitof 1 op_2)) (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) )  90)
92:(equiv_pos2 ((not (= (bitof 1 op_0) (bitof 1 op_1))) (not (bitof 1 op_0)) (bitof 1 op_1) ) )
93:(weaken ((bitof 1 op_1) (not (= (bitof 1 op_0) (bitof 1 op_1))) (not (bitof 1 op_0)) )  92)
94:(and_pos ((not (and (not (bitof 3 op_0)) (bitof 3 op_1))) (not (bitof 3 op_0)) )  0)
95:(weaken ((not (bitof 3 op_0)) (not (and (not (bitof 3 op_0)) (bitof 3 op_1))) )  94)
96:(equiv_neg2 ((= (bitof 2 op_0) (bitof 2 op_2)) (bitof 2 op_0) (bitof 2 op_2) ) )
97:(weaken ((bitof 2 op_0) (bitof 2 op_2) (= (bitof 2 op_0) (bitof 2 op_2)) )  96)
98:(and_pos ((not (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 
op_1)))) (= (bitof 1 op_0) (bitof 1 op_1)) )  0)
99:(equiv_neg1 ((= (bitof 2 op_0) (bitof 2 op_2)) (not (bitof 2 op_0)) (not (bitof 2 op_2)
) ) )
100:(weaken ((= (bitof 2 op_0) (bitof 2 op_2)) (not (bitof 2 op_2)) (not (bitof 2 op_0)) )  99)
101:(resolution ((= (bitof 3 op_0) (bitof 3 op_2)) (and (not (bitof 3 op_0)) (bitof 3 op_2)) (bitof 3 op_0) )  89 65)
102:(resolution ((and (not (bitof 3 op_0)) (bitof 3 op_2)) (= (bitof 3 op_0) (bitof 3 op_2)) (not (or (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)))) (not (or (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)))) )  24 74 62 36 31 22 30 19 95 101)
103:(resolution ((not (= (bitof 2 op_1) (bitof 2 op_2))) (bitof 2 op_2) (= (bitof 2 op_0) (bitof 2 op_2)) (not (= (bitof 2 op_0) (bitof 2 op_1))) )  85 97 68)
104:(resolution ((not (= (bitof 2 op_1) (bitof 2 op_2))) (not (= (bitof 2 op_0) (bitof 2 op_1))) (= (bitof 2 op_0) (bitof 2 op_2)) (and (not (bitof 2 op_0)) (bitof 2 op_2)) )  59 100 103)
105:(resolution ((not (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (not (bitof 1 op_0)) (not (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) )  83 91 50 47 56 93 78 98 42 76)
106:(resolution ((not (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2))))) (not (= (bitof 2 op_0) (bitof 2 op_1))) (and (not (bitof 2 op_0)) (bitof 2 op_2)) (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (not (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) )  78 42 56 71 50 44 83 63 91 87 88 105 45 51 104 40 81)
107:(resolution ((not (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1))))) (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (not (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)) )  59 85 54 58 73 106 38 37)
108:(resolution ((not (or (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)))) (bitof 3 op_2) (not (or (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)))) (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)) )  81 73 68 58 59 52 49 66 107 32 30 26 24 69 74 36 22)
109:(resolution ((or (and (= (bitof 3 op_0) (bitof 3 op_2)) (or (and (= (bitof 2 op_0) (bitof 2 op_2)) (or (and (= (bitof 1 op_0) (bitof 1 op_2)) (and (not (bitof 0 op_0)) (bitof 0 op_2))) (and (not (bitof 1 op_0)) (bitof 1 op_2)))) (and (not (bitof 2 op_0)) (bitof 2 op_2)))) (and (not (bitof 3 op_0)) (bitof 3 op_2))) (not (or (and (= (bitof 3 op_0) (bitof 3 op_1)) (or (and (= (bitof 2 op_0) (bitof 2 op_1)) (or (and (= (bitof 1 op_0) (bitof 1 op_1)) (and (not (bitof 0 op_0)) (bitof 0 op_1))) (and (not (bitof 1 op_0)) (bitof 1 op_1)))) (and (not (bitof 2 op_0)) (bitof 2 op_1)))) (and (not (bitof 3 op_0)) (bitof 3 op_1)))) (not (or (and (= (bitof 3 op_1) (bitof 3 op_2)) (or (and (= (bitof 2 op_1) (bitof 2 op_2)) (or (and (= (bitof 1 op_1) (bitof 1 op_2)) (and (not (bitof 0 op_1)) (bitof 0 op_2))) (and (not (bitof 1 op_1)) (bitof 1 op_2)))) (and (not (bitof 2 op_1)) (bitof 2 op_2)))) (and (not (bitof 3 op_1)) (bitof 3 op_2)))) )  81 73 68 58 59 52 49 66 107 69 36 34 62 32 31 30 95 28 108 82 60 20 102 39 79)
110:(resolution ((not (bvult op_0 op_1)) (not (bvult op_1 op_2)) (bvult op_0 op_2) )  109 53 48 17)
111:(resolution ()  110 10 7 3)
 Done [0.004 s]
File "./Test_bv_cvc5.v", line 47, characters 2-58:
Error: Step number 3 (Weaken) of the certificate likely failed.
